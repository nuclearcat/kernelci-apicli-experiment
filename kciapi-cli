#!/usr/bin/env python3
# No (c) & etc yet, too early, it's just PoC
# TODO:
# Configurable URL, storing secrets

import sys
import os
import requests
import click
import urllib.parse
import subprocess
import shlex
import re


DEFAULT_URL = 'http://localhost:8001/'
# This is definitely temporary hack
dockerpath = '~/PROJECTS/kernelci-api'
# Do we need sudo for docker-compose?
docker_sudo = True


@click.group(invoke_without_command=True)
@click.pass_context
def cli(ctx):
    if ctx.invoked_subcommand is None:
        print("Try --help")
        ctx.exit(1)


''' Check kernelci-api status '''


@cli.command()
def status():
    try:
        response = requests.get(DEFAULT_URL)
    except:
        print("Request error, aborting")
        sys.exit(1)
    if "message" in response.json():
        print("kernelci-api is up")


''' Generating password hash '''


@cli.command()
@click.pass_obj
def password(ctx):
    password_value = click.prompt(
        'Please enter password', type=str, hide_input=True)
    safe_string = urllib.parse.quote_plus(password_value)
    try:
        response = requests.get(DEFAULT_URL + "hash/" + safe_string)
    except:
        print("Request error, aborting")
        sys.exit(1)
    print(response.text)


''' Add user to MongoDB '''


@cli.command()
@click.option('-u', '--username')
def mongoadduser(username):
    if username is None:
        print("Please specify --username")
        sys.exit(1)
    password_value = click.prompt(
        'Please enter password', type=str, hide_input=True)
    password_value2 = click.prompt(
        'Please enter password again', type=str, hide_input=True)
    if password_value != password_value2:
        print("Passwords doesn't match")
        sys.exit(1)
    safe_string = urllib.parse.quote_plus(password_value)
    try:
        response = requests.get(DEFAULT_URL + "hash/" + safe_string)
    except:
        print("Request error, aborting")
        sys.exit(1)
    os.chdir(os.path.expanduser(dockerpath))
    escaped_hash = re.escape(response.text[1:-1])
    launchstr = "sudo docker-compose -f docker/docker-compose.yaml exec db \
  /bin/mongo kernelci --eval \
  \"db.user.insert({username: '"+username+"', \
  hashed_password: '"+escaped_hash+"', active: true})\""
    subprocess.call(launchstr, shell=True)


''' Generate token '''


@cli.command()
@click.option('-u', '--username')
def gettoken(username):
    if username is None:
        print("Please specify --username")
        sys.exit(1)
    password_value = click.prompt(
        'Please enter password', type=str, hide_input=True)
    safe_password = urllib.parse.quote_plus(password_value)
    d = {'grant_type': '', 'username': username, 'password': password_value}
    try:
        response = requests.post(DEFAULT_URL + "token", data=d)
    except:
        print("Request error, aborting")
        print(response.text)
        sys.exit(1)
    print(response.text)


if __name__ == '__main__':
    cli(obj={})
